import csv

def detecter_doublons(table):
    doublons = []
    for i in range (1, len(table)):
        for j in range(i + 1, len(table)):
            if table[i][1:] == table[j][1:]:
                doublons.append([i, j])
    return doublons

def exporter(tableau,fichier):
    file = open(fichier, "w", newline='')
    writer = csv.writer(file)
    writer.writerows(tableau)

def lecture_fichier(nom_fichier):
    with open(nom_fichier, mode='r') as fichier_ouvert:
        return list(csv.reader(fichier_ouvert, delimiter=","))

def selectionner(table, critere):
    selection=[]
    for i in range(1,len(table)):
        if critere(table[i]):
            selection.append(table[i])
    return selection


table = lecture_fichier('capitales.csv')

recherche_3 = [i for i in selectionner(table, lambda x: str(x[-2]) == 'South America') if i in selectionner(table, lambda x: float(x[2]) > 0)]

[table[i][3] for i in range(len(table)) if str(table[i][1]) == 'Paris']

recherche_4 = [(table[i][1],table[i][3]) for i in range(1,len(table)) if (float(table[i][3])-2.333333 <= 1) and (float(table[i][3])-2.333333 >= -1)]

sacs = lecture_fichier('sacs.csv')

s = sorted(sacs[1:], key = lambda item: float(item[2]) * float(item[3]) * float(item[4]))
s3 = s[:5]

s5 = sorted(sacs[1:][1:], key = lambda x: x[1])

table1 = [['Âge', 'Prénom'], [15, 'Tom'], [18, 'Marta'], [13,'Moussa']]
table2 = [['Âge', 'Prénom'], [14, 'Chaima'], [16, 'Mona'], [18, 'Elisa']]
table = table1 + table2[1:]
sorted(table, key = lambda item: str(item[0:]))

table1 = [['id_exp', 'T', 'tps'], 
          [1, 20.2, 56], 
          [2, 15.5, 85], 
          [3, 18.6, 120]]
table2 = [['id_exp', 'T', 'tps'], 
          [1, 53.6, 210], 
          [2, 62.6, 81], 
          [3, 66.2, 70]]

tablen = []
for i in range(len(table2[1:][0:])):
    tablen.append((table2[1:][0:][i][1] -32)*5/9)


def convertion_correctionID(table2, nombre_à_ajouter):
    for i in range(len(table2[1:][0:])):
        table2[1:][0:][i][1] = ((table2[1:][0:][i][1] -32)*5/9)
    for i in range(len(table2[1:][0])):
        table2[1:][0][i] = table2[1:][0][i] + nombre_à_ajouter
    return table2


